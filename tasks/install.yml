# SPDX-FileCopyrightText: 2023 - 2024 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: Ensure Etherpad paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: "0770"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  when: item.when | bool
  with_items:
    - path: "{{ etherpad_base_path }}"
      owner: "{{ etherpad_user_uid }}"
      group: "{{ etherpad_user_gid }}"
      when: true
    - path: "{{ etherpad_config_path }}"
      owner: "{{ etherpad_user_uid }}"
      group: "{{ etherpad_user_gid }}"
      when: true
    - path: "{{ etherpad_data_path }}"
      owner: "{{ etherpad_user_uid }}"
      group: "{{ etherpad_user_gid }}"
      when: true
    - path: "{{ etherpad_container_image_self_build_src_files_path }}"
      owner: root
      group: root
      when: "{{ etherpad_container_image_self_build }}"

- name: Ensure Etherpad configuration file installed
  ansible.builtin.copy:
    content: "{{ etherpad_configuration | to_nice_json }}"
    dest: "{{ etherpad_config_path }}/settings.json"
    mode: "0640"
    owner: "{{ etherpad_user_uid }}"
    group: "{{ etherpad_user_gid }}"

- name: Ensure Etherpad labels installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/labels.j2"
    dest: "{{ etherpad_base_path }}/labels"
    mode: "0640"
    owner: "{{ etherpad_user_uid }}"
    group: "{{ etherpad_user_gid }}"

- name: Run if self-building of Etherpad container image is not enabled
  when: "not etherpad_container_image_self_build | bool"
  block:
    - name: Ensure Etherpad container image is pulled via community.docker.docker_image
      when: devture_systemd_docker_base_container_image_pull_method == 'ansible-module'
      community.docker.docker_image:
        name: "{{ etherpad_container_image }}"
        source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
        force_source: "{{ etherpad_container_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
        force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else etherpad_container_image_force_pull }}"
      register: result
      retries: "{{ devture_playbook_help_container_retries_count }}"
      delay: "{{ devture_playbook_help_container_retries_delay }}"
      until: result is not failed

    - name: Ensure Etherpad container image is pulled via ansible.builtin.command
      when: devture_systemd_docker_base_container_image_pull_method == 'command'
      ansible.builtin.command:
        cmd: "{{ devture_systemd_docker_base_host_command_docker }} pull {{ etherpad_container_image }}"
      register: result
      retries: "{{ devture_playbook_help_container_retries_count }}"
      delay: "{{ devture_playbook_help_container_retries_delay }}"
      until: result is not failed
      changed_when: "'Downloaded newer image' in result.stdout"

- name: Run if self-building of Etherpad container image is enabled
  when: etherpad_container_image_self_build | bool
  block:
    - name: Ensure Etherpad repository is present on self-build
      ansible.builtin.git:
        repo: "{{ etherpad_container_image_self_build_repo }}"
        version: "{{ etherpad_container_image_self_build_repo_version }}"
        dest: "{{ etherpad_container_image_self_build_src_files_path }}"
        force: "yes"
      register: etherpad_git_pull_results

    # Invoking the `docker build` command here, instead of calling the `docker_image` Ansible module,
    # because the latter does not support BuildKit.
    # See: https://github.com/ansible-collections/community.general/issues/514
    - name: Ensure Etherpad container image is built
      ansible.builtin.shell:
        chdir: "{{ etherpad_container_image_self_build_src_files_path }}"
        cmd: |
          {{ devture_systemd_docker_base_host_command_docker }} build \
          -t "{{ etherpad_container_image_self_build_name }}" \
          -f Dockerfile \
          .
      environment:
        DOCKER_BUILDKIT: "1"
      register: result
      changed_when: "'Successfully built' in result.stdout or ('writing image' in result.stderr and 'CACHED' not in result.stderr)"

- name: Ensure Etherpad container network is created via community.docker.docker_network
  when: devture_systemd_docker_base_container_network_creation_method == 'ansible-module'
  community.docker.docker_network:
    enable_ipv6: "{{ devture_systemd_docker_base_ipv6_enabled }}"
    name: "{{ etherpad_container_network }}"
    driver: bridge
    driver_options: "{{ devture_systemd_docker_base_container_networks_driver_options }}"

- name: Ensure Etherpad container network is created via ansible.builtin.command
  when: devture_systemd_docker_base_container_network_creation_method == 'command'
  ansible.builtin.command:
    cmd: >-
      {{ devture_systemd_docker_base_host_command_docker }} network create
      {% if devture_systemd_docker_base_ipv6_enabled %}--ipv6{% endif %}
      {{ devture_systemd_docker_base_container_networks_driver_options_string }}
      {{ etherpad_container_network }}
  register: network_creation_result
  changed_when: network_creation_result.rc == 0
  failed_when: network_creation_result.rc != 0 and 'already exists' not in network_creation_result.stderr

- name: Ensure Etherpad systemd service is present
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/etherpad.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ etherpad_identifier }}.service"
    mode: "0644"
